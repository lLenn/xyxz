if(typeof require !== "undefined") {
	var TypeDefinition = require("./nixpsit-unit-TypeDefinition.js");
	var EndOfType = require("./nixpsit-unit-EndOfType.js");
	var TestObject = require("../nixpsit-unit-TestObject.js");
}

(function() {
	ValuesType = function(pRequired, pCallback) {
		this.typeDefinition(pRequired);
		
		this.callback = pCallback;
	}
	
	ValuesType.prototype = Object.assign({}, TypeDefinition.prototype, {
		constructor: ValuesType,
		typeDefinition: TypeDefinition,
		
		getValue: function(pPointer, pTestObject) {
			if(typeof this.callback === "function") {
				if(pPointer === 3) {
					return new EndOfType();
				}
				return this.callback.call(null, TestObject.copyObject(pTestObject.object));
			}
			if(this.callback.length === pPointer) {
				return new EndOfType();
			} else {
				var value = this.callback[pPointer];
				if(typeof value === "string" && value.indexOf("__") === 0) {
					switch(value.substring(2)) {
						case "now": return Date.now();
						case "nowISO": return new Date().toISOString();
					}
				}
				return value;
			}
		}
	});
})()

if(typeof module !== "undefined") {
	module.exports = ValuesType;
}