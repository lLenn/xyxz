const config = require("./../standard-config.json");

class Config {
	constructor()
	{
		this.only = [];
		this.config = config;
		this._fillOnly();
	}

	setConfig(config) {
		this.config = config;
		this._fillOnly();
	}
	
	getSetting(name) {
		if(name === "authority" && this.config[name] === undefined) {
			return this.getSetting("protocol") + '//' + this.getSetting("hostname") + ':' + this.getSetting("port");
		}
		if(this.config[name] === undefined) {
			throw new Error("Setting " + name + " was not defined!");
		}
		
		return this.config[name];
	}
	
	runTest(name) {
		if(this.only.length > 0 && this.only.indexOf(name) === -1) {
			return false;
		}
		if(this.config.tests_to_run !== undefined && this.config.tests_to_run[name] === "skip") {
			return false;
		}
		return true;
	}
	
	_fillOnly() {
		this.only = [];
		if(this.config.tests_to_run !== undefined) {
			for(var prop in this.config.tests_to_run) {
				if(this.config.tests_to_run[prop] === "only") {
					this.only.push(prop);
				}
			}
		}
	}
}

module.exports = new Config();