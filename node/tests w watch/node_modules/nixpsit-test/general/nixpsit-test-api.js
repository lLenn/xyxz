const http = require('http');
const EventEmitter = require("events");
const config = require("./nixpsit-test-config.js");

class Api extends EventEmitter {
	constructor() {
		super();
		this.sessionID;
	}
	
	getSessionID() {
		return this.sessionID;
	}
	
	async loadSession(user, password) {
		this.sessionID = (await this.call("auth.create_session", {"user_name": user, "options": { password: password }})).session;
	}
	
	call(method, args) {
		var that = this;
		return new Promise(function(resolve, reject) {
			let postData = {
				"method": method 
			};
			Object.assign(postData, args);
			if(that.sessionID !== undefined) {
				postData["session"] = that.sessionID;
			}
			postData = JSON.stringify(postData);
			let options = {
				hostname: config.getSetting("hostname"),
				port: config.getSetting("port"),
				path: "/portal.cgi",
				method: "POST",
				headers: {
					'Content-Length': Buffer.byteLength(postData)
				}
			};
			let request = http.request(options, function(response) {
				let rawData = "";
				response.on('data', function(chunk) {
					rawData += chunk;
				});
				response.on('end', function() {
					let data = JSON.parse(rawData);
					if((data !== undefined) && (data !== null) && (data.error !== undefined)) {
						reject(data);
					} else {
						resolve(data);
					}
				});
			});
			request.on('error', function(pError) {
				reject(pError);
			});
			request.write(postData);
		});
	}
}

module.exports = new Api();